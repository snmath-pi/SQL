USE JOINS_;
-- UNION :: SET OPERATION THAT COMBINES [ BASCIALLY UNION JAISE MATHS MEIN HOTA HAI]

-- FULL JOIN COLUMNS PAR HOTA UNION ROWS PAR HOTA DON'T GET CONFUSED

CREATE TABLE DEPT1
(
	EMPID INT,
    NAME VARCHAR(225),
    ROLE VARCHAR(225)
);

CREATE TABLE DEPT2(
	EMPID INT,
    NAME VARCHAR(225),
    ROLE VARCHAR(225)
);

INSERT INTO DEPT1
VALUES
(1, 'A', 'ENGINEER'), 
(2, 'B', 'SALESMAN'), 
(3, 'C', 'MANAGER'),
(4, 'D', 'SALESMAN'),
(5, 'E', 'ENGINEER');


INSERT INTO DEPT2
VALUES
(3, 'C', 'MANAGER'),
(6, 'F', 'MARKETING'),
(7, 'G', 'SALESMAN');


-- LIST OUT ALL THE EMPLOYEESS IN THE COMPANY

SELECT * FROM DEPT1
UNION 
SELECT * FROM DEPT2;

-- LIST OUT ALL THE EMPLOYESS IN ALL THE DEPARTMENTS WHO WORK AS SALESMAN
SELECT * FROM DEPT1  WHERE ROLE = 'SALESMAN'
UNION
SELECT * FROM DEPT2 WHERE ROLE = 'SALESMAN';

-- LIST OUT ALL THE EMPLOYEES WHO WORK FOR BOTH THE DEPARTMENT
-- INTERSECT
SELECT DEPT1.* FROM DEPT1 INNER JOIN DEPT2 USING (EMPID);

-- LIST OUT ALL THE EMPLOYESS WORKING IN DEPT1 AND NOT IN DEPT2
-- MINUS
SELECT DEPT1.* FROM DEPT1 LEFT JOIN DEPT2 USING (EMPID) WHERE DEPT2.EMPID IS NULL;









